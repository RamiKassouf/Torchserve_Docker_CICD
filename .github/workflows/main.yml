
name: CI/CD Pipeline

on:
    push:
        branches:
            - master
    pull_request:
        branches:
            - master

jobs:
    build:
        runs-on: self-hosted
        steps:
          - name: Checkout code
            uses: actions/checkout@v2

          - name: copy model binary
            run: |
                cp C:\Users\User\Desktop\University\DEM_CCE\Anne_3\Sem_1\CI_CD\Final_Project\NER_BERT_Model\pytorch_model.bin ./NER_BERT_Model/

          - name: install dependencies
            run: |
                pip install -r requirements.txt
    
          - name: Test
            run: |
                python -m unittest unit_test.py

          - name: Send email on test failure
            if: ${{ failure() }}
            uses: dawidd6/action-send-mail@v2
            with:
                server_address: smtp.gmail.com
                server_port: 587
                username: ${{ secrets.EMAIL_USERNAME }}
                password: ${{ secrets.EMAIL_PASSWORD }}

                from: ${{ secrets.EMAIL_USERNAME }}
                to: rami_kassouf@hotmail.com
                subject: CI/CD Pipeline Failed
                body: The CI/CD pipeline has failed. Please check the build logs for more information.
                
          - name: create mar file
            run: | 
                torch-model-archiver `
                --model-name=NER_BERT_Model `
                --version=1.0 `
                --model-file=./NER_BERT_Model/pytorch_model.bin `
                --handler=ner_handler.py `
                --extra-files=./NER_BERT_Model/config.json,./index_to_name.json,./NER_BERT_Model/special_tokens_map.json,./NER_BERT_Model/tokenizer_config.json,./NER_BERT_Model/tokenizer.json `
                --export-path=model-store

          - name: Docker login
            uses: docker/login-action@v1
            with:
                    username: ${{ secrets.DOCKER_USERNAME }}
                    password: ${{ secrets.DOCKER_PASSWORD }}

          - name: Build and push Docker image
            run: |
                    docker build -t torchserve_docker_cicd:latest .
                    docker tag torchserve_docker_cicd:latest ${{ secrets.DOCKER_USERNAME }}/torchserve_docker_cicd:latest
                    docker push ${{ secrets.DOCKER_USERNAME }}/torchserve_docker_cicd:latest
